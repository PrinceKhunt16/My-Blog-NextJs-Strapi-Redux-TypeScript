import { AxiosResponse } from "axios"
import { GetServerSidePropsContext } from "next"
import { fetchArticleBySlug } from "../../http"
import { IArticle, ICollectionResponse } from "../../types"
import qs from "qs"
import Head from "next/head"
import { formatDate, serializeMarkdown } from "../../utils"
import Image from "next/image"
import { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote';

interface IPropTypes {
    article: IArticle,
    notFound?: boolean
}

export default function Article({ article, notFound = false }: IPropTypes) {
    return (
        <>
            <Head>
                <title>{article.attributes.Title}</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="mb-7 mt-4 grid lg:grid-cols-3 gap-12 single-article">
                <div className="col-span-2">
                    <h1 className="text-[40px] font-caveatbrush text-gray-600">
                        {article.attributes.Title}
                    </h1>
                    <div>
                        <span className="text-base text-gray-600">
                            {article.attributes.author.data.attributes.firstname}{' '}
                            {article.attributes.author.data.attributes.lastname} on
                            &nbsp;
                            <span className="text-gray-500">
                                {formatDate(article.attributes.createdAt)}
                            </span>
                        </span>
                    </div>
                    <div className="text-lg text-gray-600 leading-8">
                        <img
                            className="w-full pt-6"
                            src={`http://localhost:1337${article.attributes.Image.data.attributes.url}`}
                            alt={article.attributes.Title}
                        />
                        <div className="pt-5">
                            <MDXRemote {...(article.attributes.Body) as MDXRemoteSerializeResult} />
                        </div>
                    </div>
                </div>
                <div className="col-span-1 pt-7">
                    <div className="p-5 w-full flex items-center justify-center border border-primary bg-[#53bd9515]">
                        <Image
                            src={`http://localhost:1337${article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url}`}
                            alt={article.attributes.Title}
                            height={40}
                            width={40}
                            className="h-40 w-40 border border-primary object-cover rounded-full"
                        />
                    </div>
                </div>
            </div>
        </>
    )
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
    const queryString = qs.stringify({
        populate: ['Image', 'author.avatar'],
        filters: {
            Slug: {
                $eq: context.query.article,
            },
        },
    })

    const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> = await fetchArticleBySlug(queryString)

    if (articles.data.length === 0) {
        return {
            notFound: true,
        };
    }

    return {
        props: {
            article: await serializeMarkdown(articles.data[0])
        }
    }
}